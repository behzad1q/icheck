<?php
/**
 * @file
 * This module provides the some nice display for checkbox and radio buttons.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_element_info_alter().
 */
function icheck_element_info_alter(&$info) {
  // Element types need to be replaced.
  $element_types = array(
    'radio',
    'radios',
    'checkboxes',
    'checkbox'
  );

  foreach($element_types as $type) {
    $info[$type]['#process'][] = 'icheck_element_process_callback';
  }
}

/**
 * Process callback: Expands the language_configuration form element.
 *
 * @param array $element
 *   Form API element.
 *
 * @return
 *   Processed language configuration element.
 */
function icheck_element_process_callback(array $element, FormStateInterface $form_state, array &$form) {

  $config = \Drupal::config('config.icheck_settings');
  $icheck_enabled = $config->get('ichecked_enable');

  // Check for Admin paths.
  if (\Drupal::service('router.admin_context')->isAdminRoute()) {
    $icheck_enabled = $config->get('ichecked_enable_admin');
  }

  // Activate iCheck when enabled or explicitly set on element.
  if ($icheck_enabled || isset($element['#icheck'])) {
    $color = $config->get('icheck_skin_color', 'blue');
    $skin = $config->get('icheck_skin', 'minimal');
    if ($color == '') {
      $color = $skin;
    }
    $defaults = array(
      'skin' => $skin,
      'color' => $color,
    );

    if (isset($element['#icheck']) && is_array($element['#icheck'])) {
      $element['#icheck'] += $defaults;
    } else {
      $element['#icheck'] = $defaults;
    }

    icheck_add_js_settings($element, $form);
  }

  return $element;
}

/**
 * Add iCheck js settings
 *
 * @staticvar boolean $libraries_added
 *
 * @param  $element
 *
 * @return void
 */
function icheck_add_js_settings($element, array &$form) {
  static $libraries_added = FALSE;

  $id = isset($element['#attributes']['id']) ? $element['#attributes']['id'] : $element['#id'];

  $skin = $element['#icheck']['skin'];
  $color = $element['#icheck']['color'];

  $js_settings = array(
    'skin' => $skin,
    'color' => $color
  );

  if (!$libraries_added) {
    $form['#attached']['library'][] = 'icheck/icheck_library_' . $skin . '_' .$color;
    $form['#attached']['library'][] = 'icheck/icheck_js_file';
  }

  $form['#attached']['drupalSettings']['icheck'][$id] =  $js_settings;
}


/**
 * Implements hook_libraries_info().
 */
function icheck_libraries_info() {
  $libraries['iCheck'] = array(
    'name' => 'iCheck',
    'vendor url' => 'https://github.com/fronteed/iCheck/',
    'download url' => 'https://github.com/fronteed/iCheck/archive/1.0.2.tar.gz',
    'version arguments' => array(
      'file' => 'icheck.min.js',
      // iCheck v1.0.2
      'pattern' => '/iCheck v(\d+\.+\d+\.+\d+)/',
      'lines' => 1,
    ),
    'files' => array(
      'js' => array(
        'icheck.js',
      ),
    ),
  );

  return $libraries;
}
